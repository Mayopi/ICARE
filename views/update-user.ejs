<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Admin Dashboard</title>

    <!-- bootstrap cdn -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx" crossorigin="anonymous" />

    <link rel="Icon" href="img/icare-logo.png" />

    <!-- css link -->
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      :root {
        --main-color: #2a2550;
        --second-color: #eaeaea;
        --additional-color: #34b3f1;
        --text-color: #333;
        --montserrat-regular: "Montserrat", sans-serif;
      }

      body {
        background: var(--second-color);
      }

      .area {
        margin-left: 60px;
        background: inherit;
      }

      /* dashboard header */

      .dashboard-header-content {
        background: var(--text-color);
        color: var(--second-color);
        font-family: var(--montserrat-regular);
      }

      .dashboard-header {
        display: flex;
        margin-top: 50px;
      }

      .dashboard-header button {
        border: none;
        background: inherit;
      }

      #arrow {
        color: var(--second-color);
        font-size: 2em;
      }

      /* end of dashboard header */

      /* Breadcrumb */

      .breadcrumb {
        margin-top: 20px;
        font-size: 1.3em;
        font-family: var(--montserrat-regular);
        font-weight: 500;
      }

      .breadcrumb a {
        text-decoration: none;
        color: var(--additional-color);
      }

      /* end of breadcrumb */

      .container {
        padding: 20px;
        margin-top: 20px;
        border: 5px;
        background: white;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
        border-radius: 10px;
      }

      form {
        margin: auto;
        max-width: 80%;
        max-height: 100%;
        display: flex;
        flex-direction: column;
      }

      .profile {
        margin-bottom: 50px;
        display: flex;
        gap: 2em;
        align-items: center;
      }

      .profile-picture {
        width: 100px;
        height: 100px;
        background: var(--additional-color);
        border-radius: 50%;
      }

      .profile-caption {
        display: flex;
        flex-direction: column;
        justify-content: center;
      }

      .input-box {
        display: flex;
        gap: 2em;
        justify-content: space-around;
        flex-wrap: wrap;
      }

      .input-box .mb-3 label {
        font-weight: bold;
        font-size: 1.3em;
      }

      .input-box .mb-3 input {
        width: 400px;
        font-size: 1.3em;
      }

      .change {
        display: flex;
        gap: 2em;
      }

      .save-btn,
      .reset-btn {
        width: 150px;
        font-size: 1.3em;
      }

      .save-btn {
        background: var(--additional-color);
        color: white;
      }

      .danger-zone {
        background: var(--text-color);
        border-radius: 5px;
        padding: 20px;
        color: red;
      }

      .delete-btn {
        font-size: 1.2em;
        font-weight: bold;
      }

      .username.error,
      .number.error {
        margin-top: 10px;
        margin-bottom: 20px;
        color: #ff0099;
        font-weight: bold;
      }

      hr {
        border: none;
        border-bottom: 5px solid red;
        opacity: 1;
      }
    </style>

    <!-- Bootstrap Icon CDN -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/bootstrap-icons.css" />
  </head>
  <body>
    <%- include('./layouts/dashboardnav-admin') %>

    <div class="area">
      <div class="container-fluid">
        <div class="row dashboard-header-content">
          <div class="col-sm-4">
            <div class="dashboard-header">
              <h1>Admin Dashboard</h1>
              <button class="dashboard-navbar-toggle"><i class="bi bi-caret-right-fill" id="arrow"></i></button>
            </div>
          </div>
        </div>
      </div>

      <div class="container breadcrumb">
        <nav aria-label="breadcrumb">
          <ol class="breadcrumb">
            <li class="breadcrumb-item" aria-current="page">
              <a href="/">Home</a>
            </li>
            <li class="breadcrumb-item" aria-current="page">
              <a href="/dashboard-admin">Dashboard</a>
            </li>
            <li class="breadcrumb-item" aria-current="page">
              <a href="/manage-user">Manage User</a>
            </li>
            <li class="breadcrumb-item active" aria-current="page"><%- user.username %></li>
          </ol>
        </nav>
      </div>

      <div class="container">
        <form>
          <div class="profile">
            <div class="profile-picture"></div>
            <div class="profile-caption">
              <h4>Set A Profile Picture</h4>
              <p>Upload a photo and change your Profile Picture</p>
            </div>
          </div>
          <div class="input-box">
            <div class="mb-3">
              <label for="exampleInputEmail1" class="form-label">Username</label>
              <input type="text" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp" value="<%= user.username %>" name="username" />
              <div class="username error"></div>
            </div>
            <div class="mb-3">
              <label for="exampleInputPassword1" class="form-label">Mobile Phone</label>
              <input type="number" class="form-control" id="exampleInputPassword1" value="<%= user.number %>" name="number" />
              <div class="number error"></div>
            </div>
          </div>
          <div class="change" hidden="true">
            <a type="submit" class="btn save-btn">Save</a>
            <a class="btn btn-danger reset-btn">Reset</a>
          </div>
        </form>

        <hr />

        <div class="danger-zone">
          <h2>Danger Zone</h2>
          <p>This Will Delete Your Account Permanently And All Associated Data</p>
          <a href="/delete-user/<%- user._id %>" class="btn btn-danger delete-btn">Delete Account</a>
        </div>
      </div>
    </div>

    <script>
      const form = document.querySelector("form");
      const username = form.username;
      const number = form.number;
      const change = document.querySelector(".change");
      const resetBtn = document.querySelector(".reset-btn");
      const saveBtn = document.querySelector(".save-btn");
      const deleteBtn = document.querySelector(".delete-btn");
      const usernameError = document.querySelector(".username.error");
      const numberError = document.querySelector(".number.error");

      const untouched = {};
      untouched.username = username.value;
      untouched.number = number.value;

      const watchChange = setInterval(() => {
        username.value.length > 12 ? (usernameError.innerText = "Maximum Username is 12 character long") : (usernameError.innerText = "");
        number.value.length !== 12 ? (numberError.innerText = "Mobile Phone must be valid one") : (numberError.innerText = "");

        if (username.value !== untouched.username || number.value !== untouched.number) {
          change.hidden = false;
        } else {
          change.hidden = true;
        }
      }, 1000);

      saveBtn.addEventListener("click", async () => {
        try {
          if (username.value.length > 12) {
            throw new Error("Maximum Username is 12 character long");
          }

          if (number.value.length !== 12) {
            throw new Error("Mobile Phone must be valid one");
          }

          const res = await fetch("/update-user", {
            method: "POST",
            body: JSON.stringify({
              username: username.value,
              number: number.value,
              credential: {
                username: untouched.username,
                number: untouched.number,
              },
            }),
            headers: { "Content-Type": "application/json" },
          });

          const data = await res.json();

          console.log(data);

          if (data.result) {
            Notification.requestPermission().then((perm) => {
              if (perm == "granted") {
                new Notification(`Successfully editing ${untouched.username}`, {
                  body: "Redirecting to Manage User",
                  icon: "img/notif-icon.png",
                });
              }
            });

            location.assign("/manage-user");
          }

          if (data.error) {
            numberError.innerText = data.error;
          }
        } catch (error) {
          console.log(error);
        }
      });

      resetBtn.addEventListener("click", () => {
        username.value = untouched.username;
        number.value = untouched.number;
      });

      deleteBtn.addEventListener("click", () => {
        const confirmResult = confirm("Are you sure to continue this proceed?");
        if (!confirmResult) {
          deleteBtn.href = "";
          return;
        }
      });
    </script>
  </body>
</html>
